import java.util.*;

public class countCommas {


    public static void main(String[] args){
        System.out.println(whichNumberToRemove(1500.90, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 32, 33, 34, 35, 36, 38, 39, 40, 42, 44, 45, 46, 48, 49, 50, 51, 52, 54, 55, 56, 57, 60, 63, 64, 65, 66, 68, 69, 70, 72, 75, 76, 77, 78, 80, 81, 84, 85, 88, 90, 91, 95, 96, 98, 99, 100, 102, 104, 105, 108, 110, 112, 114, 117, 119, 120, 121, 125, 126, 128, 130, 132, 135, 136, 140, 143, 144, 147, 150, 152, 153, 154, 156, 160, 162, 165, 168, 169, 170, 171, 175, 176, 180, 182, 189, 190, 192, 195, 196, 198, 200, 204, 208, 210, 216, 220, 224, 225, 228, 231, 234, 238, 240, 242, 243, 245, 250, 252, 255, 256, 260, 264, 270, 272, 273, 275, 280, 286, 288, 294, 297, 300, 306, 308, 312, 315, 320, 324, 325, 330, 336, 340, 343, 350, 351, 352, 360, 363, 364, 375, 378, 384, 385, 390, 392, 396, 400, 405, 408, 416, 420, 432, 440, 441, 448, 450, 455, 459, 462, 468, 480, 484, 486, 490, 495, 500, 504, 512, 520, 525, 528, 539, 540, 546, 550, 560, 567, 576, 585, 588, 594, 600, 616, 624, 625, 630, 640, 648, 650, 660, 672, 675, 686, 693, 700, 702, 704, 720, 728, 729, 735, 750, 756, 768, 770, 780, 784, 792, 800, 810, 819, 825, 832, 840, 864, 875, 880, 882, 891, 896, 900, 924, 936, 945, 960, 972, 975, 980, 990, 1000, 1008, 1024, 1029, 1040, 1050, 1053, 1056, 1080, 1100, 1120, 1125, 1134, 1152, 1155, 1170, 1176, 1188, 1200, 1215, 1225, 1232, 1248, 1250, 1260, 1280, 1296, 1320, 1323, 1344, 1350, 1372, 1375, 1386, 1400, 1404, 1408, 1440, 1458, 1470, 1485, 1500, 1512, 1536, 1568, 1575, 1584, 1600, 1620, 1650, 1680, 1701, 1715, 1728, 1750, 1760, 1764, 1782, 1792, 1800, 1875, 1890, 1920, 1944, 1960, 1980, 2000, 2016, 2025, 2048, 2058, 2100, 2112, 2160, 2187, 2205, 2240, 2250, 2268, 2304, 2352, 2376, 2400, 2430, 2450, 2500, 2520, 2560, 2592, 2625, 2646, 2673, 2688, 2700, 2800, 2835, 2880, 2916, 2940, 3000, 3024, 3072, 3125, 3136, 3150, 3200, 3240, 3360, 3375, 3402, 3456, 3500, 3528, 3584, 3600, 3645, 3750, 3780, 3840, 3888, 3969, 4000, 4032, 4050, 4096, 4200, 4320, 4374, 4480, 4500, 4536, 4608, 4725, 4800, 4860, 5000, 5040, 5103, 5120, 5184, 5376, 5400, 5625, 5670, 5760, 5832, 6000, 6048, 6075, 6144, 6400, 6480, 6561, 6750, 6804, 6912, 7200, 7290, 7680, 7776, 8100, 8192, 8640, 8748, 9216, 9720, 10368, 10935, 11664, 13122));

        System.out.println(average(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 32, 33, 34, 35, 36, 38, 39, 40, 42, 44, 45, 46, 48, 49, 50, 51, 52, 54, 55, 56, 57, 60, 63, 64, 65, 66, 68, 69, 70, 72, 75, 76, 77, 78, 80, 81, 84, 85, 88, 90, 91, 95, 96, 98, 99, 100, 102, 104, 105, 108, 110, 112, 114, 117, 119, 120, 121, 125, 126, 128, 130, 132, 133, 135, 136, 140, 143, 144, 147, 150, 152, 153, 154, 156, 160, 162, 165, 168, 169, 170, 171, 175, 176, 180, 182, 189, 190, 192, 195, 196, 198, 200, 204, 208, 210, 216, 220, 224, 225, 228, 231, 234, 238, 240, 242, 243, 245, 250, 252, 255, 256, 260, 264, 270, 272, 273, 275, 280, 286, 288, 294, 297, 300, 306, 308, 312, 315, 320, 324, 325, 330, 336, 340, 343, 350, 351, 352, 360, 363, 364, 375, 378, 384, 385, 390, 392, 396, 400, 405, 408, 416, 420, 432, 440, 441, 448, 450, 455, 459, 462, 468, 480, 484, 486, 490, 495, 500, 504, 512, 520, 525, 528, 539, 540, 546, 550, 560, 567, 576, 585, 588, 594, 600, 616, 624, 625, 630, 640, 648, 650, 660, 672, 675, 686, 693, 700, 702, 704, 720, 728, 729, 735, 750, 756, 768, 770, 780, 784, 792, 800, 810, 819, 825, 832, 840, 864, 875, 880, 882, 891, 896, 900, 924, 936, 945, 960, 972, 975, 980, 990, 1000, 1008, 1024, 1029, 1040, 1050, 1053, 1056, 1080, 1100, 1120, 1125, 1134, 1152, 1155, 1170, 1176, 1188, 1200, 1215, 1225, 1232, 1248, 1250, 1260, 1280, 1296, 1320, 1323, 1344, 1350, 1372, 1375, 1386, 1400, 1404, 1408, 1440, 1458, 1470, 1485, 1500, 1512, 1536, 1568, 1575, 1584, 1600, 1620, 1650, 1680, 1701, 1715, 1728, 1750, 1760, 1764, 1782, 1792, 1800, 1875, 1890, 1920, 1944, 1960, 1980, 2000, 2016, 2025, 2048, 2058, 2100, 2112, 2160, 2187, 2205, 2240, 2250, 2268, 2304, 2352, 2376, 2400, 2430, 2450, 2500, 2520, 2560, 2592, 2625, 2646, 2673, 2688, 2700, 2800, 2835, 2880, 2916, 2940, 3000, 3024, 3072, 3125, 3136, 3150, 3200, 3240, 3360, 3375, 3402, 3456, 3500, 3528, 3584, 3600, 3645, 3750, 3780, 3840, 3888, 3969, 4000, 4032, 4050, 4096, 4200, 4320, 4374, 4480, 4500, 4536, 4608, 4725, 4800, 4860, 5000, 5040, 5103, 5120, 5184, 5376, 5400, 5625, 5670, 5760, 5832, 6000, 6048, 6075, 6144, 6400, 6480, 6561, 6750, 6804, 6912, 7200, 7290, 7680, 7776, 8100, 8192, 8640, 8748, 9216, 9720, 10368, 10935, 11664, 13122));
        System.out.println("1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 32, 33, 34, 35, 36, 38, 39, 40, 42, 44, 45, 46, 48, 49, 50, 51, 52, 54, 55, 56, 57, 60, 63, 64, 65, 66, 68, 69, 70, 72, 75, 76, 77, 78, 80, 81, 84, 85, 88, 90, 91, 95, 96, 98, 99, 100, 102, 104, 105, 108, 110, 112, 114, 117, 119, 120, 121, 125, 126, 128, 130, 132, 133, 135, 136, 140, 143, 144, 147, 150, 152, 153, 154, 156, 160, 162, 165, 168, 169, 170, 171, 175, 176, 180, 182, 189, 190, 192, 195, 196, 198, 200, 204, 208, 210, 216, 220, 224, 225, 228, 231, 234, 238, 240, 242, 243, 245, 250, 252, 255, 256, 260, 264, 270, 272, 273, 275, 280, 286, 288, 294, 297, 300, 306, 308, 312, 315, 320, 324, 325, 330, 336, 340, 343, 350, 351, 352, 360, 363, 364, 375, 378, 384, 385, 390, 392, 396, 400, 405, 408, 416, 420, 432, 440, 441, 448, 450, 455, 459, 462, 468, 480, 484, 486, 490, 495, 500, 504, 512, 520, 525, 528, 539, 540, 546, 550, 560, 567, 576, 585, 588, 594, 600, 616, 624, 625, 630, 640, 648, 650, 660, 672, 675, 686, 693, 700, 702, 704, 720, 728, 729, 735, 750, 756, 768, 770, 780, 784, 792, 800, 810, 819, 825, 832, 840, 864, 875, 880, 882, 891, 896, 900, 924, 936, 945, 960, 972, 975, 980, 990, 1000, 1008, 1024, 1029, 1040, 1050, 1053, 1056, 1080, 1100, 1120, 1125, 1134, 1152, 1155, 1170, 1176, 1188, 1200, 1215, 1225, 1232, 1248, 1250, 1260, 1280, 1296, 1320, 1323, 1344, 1350, 1372, 1375, 1386, 1400, 1404, 1408, 1440, 1458, 1470, 1485, 1500, 1512, 1536, 1568, 1575, 1584, 1600, 1620, 1650, 1680, 1701, 1715, 1728, 1750, 1760, 1764, 1782, 1792, 1800, 1875, 1890, 1920, 1944, 1960, 1980, 2000, 2016, 2025, 2048, 2058, 2100, 2112, 2160, 2187, 2205, 2240, 2250, 2268, 2304, 2352, 2376, 2400, 2430, 2450, 2500, 2520, 2560, 2592, 2625, 2646, 2673, 2688, 2700, 2800, 2835, 2880, 2916, 2940, 3000, 3024, 3072, 3125, 3136, 3150, 3200, 3240, 3360, 3375, 3402, 3456, 3500, 3528, 3584, 3600, 3645, 3750, 3780, 3840, 3888, 3969, 4000, 4032, 4050, 4096, 4200, 4320, 4374, 4480, 4500, 4536, 4608, 4725, 4800, 4860, 5000, 5040, 5103, 5120, 5184, 5376, 5400, 5625, 5670, 5760, 5832, 6000, 6048, 6075, 6144, 6400, 6480, 6561, 6750, 6804, 6912, 7200, 7290, 7680, 7776, 8100, 8192, 8640, 8748, 9216, 9720, 10368, 10935, 11664, 13122");
        System.out.println("1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 32, 33, 34, 35, 36, 38, 39, 40, 42, 44, 45, 46, 48, 49, 50, 51, 52, 54, 55, 56, 57, 60, 63, 64, 65, 66, 68, 69, 70, 72, 75, 76, 77, 78, 80, 81, 84, 85, 88, 90, 91, 95, 96, 98, 99, 100, 102, 104, 105, 108, 110, 112, 114, 117, 119, 120, 121, 125, 126, 128, 130, 132, 135, 136, 140, 143, 144, 147, 150, 152, 153, 154, 156, 160, 162, 165, 168, 169, 170, 171, 175, 176, 180, 182, 189, 190, 192, 195, 196, 198, 200, 204, 208, 210, 216, 220, 224, 225, 228, 231, 234, 238, 240, 242, 243, 245, 250, 252, 255, 256, 260, 264, 270, 272, 273, 275, 280, 286, 288, 294, 297, 300, 306, 308, 312, 315, 320, 324, 325, 330, 336, 340, 343, 350, 351, 352, 360, 363, 364, 375, 378, 384, 385, 390, 392, 396, 400, 405, 408, 416, 420, 432, 440, 441, 448, 450, 455, 459, 462, 468, 480, 484, 486, 490, 495, 500, 504, 512, 520, 525, 528, 539, 540, 546, 550, 560, 567, 576, 585, 588, 594, 600, 616, 624, 625, 630, 640, 648, 650, 660, 672, 675, 686, 693, 700, 702, 704, 720, 728, 729, 735, 750, 756, 768, 770, 780, 784, 792, 800, 810, 819, 825, 832, 840, 864, 875, 880, 882, 891, 896, 900, 924, 936, 945, 960, 972, 975, 980, 990, 1000, 1008, 1024, 1029, 1040, 1050, 1053, 1056, 1080, 1100, 1120, 1125, 1134, 1152, 1155, 1170, 1176, 1188, 1200, 1215, 1225, 1232, 1248, 1250, 1260, 1280, 1296, 1320, 1323, 1344, 1350, 1372, 1375, 1386, 1400, 1404, 1408, 1440, 1458, 1470, 1485, 1500, 1512, 1536, 1568, 1575, 1584, 1600, 1620, 1650, 1680, 1701, 1715, 1728, 1750, 1760, 1764, 1782, 1792, 1800, 1875, 1890, 1920, 1944, 1960, 1980, 2000, 2016, 2025, 2048, 2058, 2100, 2112, 2160, 2187, 2205, 2240, 2250, 2268, 2304, 2352, 2376, 2400, 2430, 2450, 2500, 2520, 2560, 2592, 2625, 2646, 2673, 2688, 2700, 2800, 2835, 2880, 2916, 2940, 3000, 3024, 3072, 3125, 3136, 3150, 3200, 3240, 3360, 3375, 3402, 3456, 3500, 3528, 3584, 3600, 3645, 3750, 3780, 3840, 3888, 3969, 4000, 4032, 4050, 4096, 4200, 4320, 4374, 4480, 4500, 4536, 4608, 4725, 4800, 4860, 5000, 5040, 5103, 5120, 5184, 5376, 5400, 5625, 5670, 5760, 5832, 6000, 6048, 6075, 6144, 6400, 6480, 6561, 6750, 6804, 6912, 7200, 7290, 7680, 7776, 8100, 8192, 8640, 8748, 9216, 9720, 10368, 10935, 11664, 13122");
        //System.out.println(countThem(",1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 32, 33, 34, 35, 36, 38, 39, 40, 42, 44, 45, 46, 48, 49, 50, 51, 52, 54, 55, 56, 57, 60, 63, 64, 65, 66, 68, 69, 70, 72, 75, 76, 77, 78, 80, 81, 84, 85, 88, 90, 91, 95, 96, 98, 99, 100, 102, 104, 105, 108, 110, 112, 114, 117, 119, 120, 121, 125, 126, 128, 130, 132, 135, 136, 140, 143, 144, 147, 150, 152, 153, 154, 156, 160, 162, 165, 168, 169, 170, 171, 175, 176, 180, 182, 189, 190, 192, 195, 196, 198, 200, 204, 208, 210, 216, 220, 224, 225, 228, 231, 234, 238, 240, 242, 243, 245, 250, 252, 255, 256, 260, 264, 270, 272, 273, 275, 280, 286, 288, 294, 297, 300, 306, 308, 312, 315, 320, 324, 325, 330, 336, 340, 343, 350, 351, 352, 360, 363, 364, 375, 378, 384, 385, 390, 392, 396, 400, 405, 408, 416, 420, 432, 440, 441, 448, 450, 455, 459, 462, 468, 480, 484, 486, 490, 495, 500, 504, 512, 520, 525, 528, 539, 540, 546, 550, 560, 567, 576, 585, 588, 594, 600, 616, 624"));
    }


    public static int countThem(String commas){
        int counter = 0;
        for(int i = 0; i < commas.length(); i++){
            if(commas.charAt(i) == ','){
                counter++;
            }
        }

        return counter;

    }


    public static double average(Long... list){
        long sum = 0;
        for(long n : list){
            sum += n;
        }

        double average = (double) sum / (list.length);
        return average;
    }

    public static double average(Integer... list){
        long sum = 0;
        for(long n : list){
            sum += n;
        }

        double average = (double) sum / (list.length);
        return average;
    }


    public static long whichNumberToRemove(double average, Integer... list){
        double testAverage = 0;
        int iteration = 0;
        while(iteration < list.length){
            List<Integer> modifyingList = new ArrayList<Integer>(Arrays.asList(list));
            modifyingList.remove(iteration);
            Integer[] newList = modifyingList.toArray(new Integer[0]);


            if( ((average(newList) - average) <= .01) && ((average(newList) - average) >= -.01)){
                System.out.println("Take out");
                return newList[iteration];
            }

            iteration ++;

        }
        Integer numberToAdd = 1;

        OUTER_LOOP: while(numberToAdd < (int)average + 1){

            for(Integer number: list){
                if(numberToAdd.equals(number)){
                    numberToAdd++;
                    continue OUTER_LOOP;
                }
            }

            List<Integer> modifyingList = new ArrayList<Integer>(Arrays.asList(list));
            modifyingList.add(numberToAdd);
            Integer[] newList = modifyingList.toArray(new Integer[0]);


            if( ((average(newList) - average) <= .001) && ((average(newList) - average) >= -.001)){
                System.out.println("put in");
                return numberToAdd;
            }

            numberToAdd++;
        }

        return 0;
    }

    public static long whichNumberToRemove(double average, Long... list){
        double testAverage = 0;
        int iteration = 0;
        while(iteration < list.length){
            List<Long> modifyingList = new ArrayList<Long>(Arrays.asList(list));
            modifyingList.remove(iteration);
            Long[] newList = modifyingList.toArray(new Long[0]);


            if(average(newList) - average <= 1 || average - average(newList) <= 1){
                return list[iteration];
            }

            iteration ++;

        }

        return 0L;
    }
}


//214
//213